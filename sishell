#!/bin/bash
#github: RudolfBSuguitan2
#Please read ReadMe file
#etc/password to change shell or use -s
#use -m flag to create home directory

INPUT
INPUT_ARR

PWD_ARR="-L -P --help --version"
PWD_ARR2=( $PWD_ARR )

funcHelp(){
	echo -e "\n>> pw"
	echo -e "\tThis command prints your current working directory.\n\tYou are restricted to use any tail.\n\tIf tail is provided, it will be ignored.\n"
	echo -e "\n>> close"
	echo -e "\tThis command will close your terminal or\n\tlog you out if other user's account is being used\n"
	echo -e "\n>> dt"
	echo -e "\tDisplays current date and time in this\n\tformat: year, month, day, hour, minutes, seconds\n"
}

pwdFunc(){
	for ((z=1; z<"${#INPUT_ARR[@]}"; z++))
	do
		for ((x=0; x<"${#PWD_ARR2[@]}"; x++))
        	do
			if [[ "${PWD_ARR2[x]}" == "${INPUT_ARR[$z]}" ]];
                        then
                                echo -e "\nYou have no permission to use tail. Tail ignored."
                                echo -e "Current working directory: $(pwd)\n"
				break
                        else
                               	echo -e "\nERROR>UNKNOWN COMMAND: ${INPUT_ARR[$z]}\n"
                                break
                        fi
		done
	done
}

clear
cd "/home/$(whoami)"
echo -e "\nWelcome $(whoami)!"
echo -e "This is your custom shell"
echo -e "For help, enter command: how\n"

i=1 #Used to make an infinite while loop to keep the program runnning
while [ $i -eq 1 ]
do
	echo -n "$(whoami):$(pwd)> "
	read INPUT
	if [[ -z $INPUT ]];
	then
		INPUT="none"
	else
		INPUT_ARR=( $INPUT )
	fi

	if [[ "${INPUT_ARR[0]}" = "pw" ]];
	then
		if [[ "${#INPUT_ARR[@]}" -gt "1" ]];
		then
			INPUT="pw_tail"
		elif [[ "${#INPUT_ARR[@]}" -eq "1" ]];
		then
			INPUT="pw"
		fi
	fi


	case $INPUT in
                "how")
			funcHelp;;
		"dt")
			echo -e "\nTodays date is: $(date +%Y%m%d%H%M%S)\n";;
		"pw_tail")
			pwdFunc;;
		"pw")
			echo -e "\nCurrent working directory: $(type pwd)\n";;
		"ifc")
			echo -e "\n$(ifconfig eth0)\n";;
		"show")
			echo -e "\n$(ls)\n";;
		"n")
			echo -e -n "\nFolder name: "
			read FNAME
			mkdir $FNAME;;
		"clr")
			clear;;
		"none")
			echo -n "";;
                "close")
			echo -e "\nGoodbye\n"
			exit;;
                *) echo -e "\nERROR>UNKNOWN COMMAND: $INPUT\nFor help, enter command: how\n";;
        esac

done
